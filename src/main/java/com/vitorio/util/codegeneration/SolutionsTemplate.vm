package com.vitorio.platformexercises.hackerrank.threemonthpreparationkit.${week}.${packageName};

import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.stream.Stream;

import static java.util.stream.Collectors.toList;

public class ${className}Solution {

    public static int main(String[] args) throws IOException {
        List<List<Integer>> square = new ArrayList<>();
        for (int i = 0; i < args.length; i++) {
            List<Integer> row = Stream.of(args[i].replaceAll("\\s+$", "").split(" "))
                .map(Integer::parseInt)
                .collect(toList());
            square.add(row);
        }
        return Result.formingMagicSquare(square);
    }

    class Result {

        /*
         * Complete the 'formingMagicSquare' function below.
         *
         * The function is expected to return an INTEGER.
         * The function accepts 2D_INTEGER_ARRAY s as parameter.
         */

        public static int formingMagicSquare(List<List<Integer>> s) {
            return 0;
        }
    }
}
